{"version":3,"file":"static/js/1376.23b394ab.chunk.js","mappings":"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","sources":["admin/BrandList.jsx","admin/Sidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './BrandList.css';\r\nimport { getApiUrl } from '../utils/api';\r\nimport {\r\n  FaEnvelope, FaPhone, FaMapMarkerAlt, FaIndustry, FaClock, FaPlus, FaEdit, FaSave, FaTimes\r\n} from 'react-icons/fa';\r\nimport { MdComputer, MdLocationCity, MdWifi } from 'react-icons/md';\r\nimport Sidebar from './Sidebar';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst modeIcons = {\r\n  online: <MdComputer className=\"icon\" />,\r\n  offline: <MdLocationCity className=\"icon\" />,\r\n  hybrid: <MdWifi className=\"icon\" />,\r\n};\r\n\r\nexport default function BrandList() {\r\n  const [brands, setBrands] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  // State for adding new brand\r\n  const [form, setForm] = useState({\r\n    name: '',\r\n    state_id: '',\r\n    city_id: '',\r\n    mas_cat_id: '',\r\n    mobile: '',\r\n    email: '',\r\n    password: ''\r\n  });\r\n\r\n  // States for editing existing brand\r\n  const [editingBrandId, setEditingBrandId] = useState(null);\r\n  const [editableStatus, setEditableStatus] = useState('');\r\n  const [editableMode, setEditableMode] = useState('');\r\n\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n  const [masterCategories, setMasterCategories] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchBrands();\r\n    fetchStates();\r\n    fetchMasterCategories();\r\n  }, []);\r\n  const fetchBrands = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(getApiUrl('get-register-brands.php'));\r\n      const result = await res.json();\r\n      if (result.success) {\r\n        setBrands(result.data);\r\n      } else {\r\n        setError(result.message || 'Failed to load brands');\r\n      }\r\n    } catch (e) {\r\n      setError('Network error: ' + e.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const fetchStates = async () => {\r\n    try {\r\n      const res = await fetch(getApiUrl('get-indian-states.php'));\r\n      const data = await res.json();\r\n      if (Array.isArray(data)) setStates(data);\r\n    } catch (e) {\r\n      console.error('Failed to fetch states:', e);\r\n    }\r\n  };\r\n\r\n  const fetchCities = async (stateId) => {\r\n    try {\r\n      const res = await fetch(getApiUrl(`get-cities.php?state_id=${stateId}`));\r\n      const data = await res.json();\r\n      if (Array.isArray(data)) setCities(data);\r\n    } catch (e) {\r\n      console.error('Failed to fetch cities:', e);\r\n    }\r\n  };\r\n\r\n  const fetchMasterCategories = async () => {\r\n    try {\r\n      const res = await fetch(getApiUrl('get-master-category.php'));\r\n      const data = await res.json();\r\n      if (Array.isArray(data)) {\r\n        const filtered = data.filter((cat) => cat.is_deleted === \"0\");\r\n        setMasterCategories(filtered);\r\n      }\r\n    } catch (e) {\r\n      console.error('Failed to fetch master categories:', e);\r\n    }\r\n  };\r\n\r\n  // Handler for adding new brand\r\n  const handleStateChange = (e) => {\r\n    const value = e.target.value;\r\n    setForm({ ...form, state_id: value, city_id: '' });\r\n    if (value) {\r\n      fetchCities(value);\r\n    } else {\r\n      setCities([]);\r\n    }\r\n  };\r\n\r\n  const handleFormChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleAddBrand = async () => {\r\n    const { name, state_id, city_id, mas_cat_id, mobile, email, password } = form;\r\n    if (!name || !state_id || !city_id || !mas_cat_id || !mobile || !email || !password) {\r\n      toast.error('All fields are required');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(getApiUrl('add-brand.php'), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          name: form.name,\r\n          user_name: form.user_name,\r\n          mobile: form.mobile,\r\n          email: form.email,\r\n          password: form.password,\r\n          state_id: form.state_id,\r\n          city_id: form.city_id,\r\n          mas_cat_id: form.mas_cat_id\r\n        }),\r\n      });\r\n\r\n      const result = await res.json();\r\n      if (result.success) {\r\n        toast.success('Brand added successfully');\r\n        setShowModal(false);\r\n        fetchBrands(); // Refresh the list\r\n        setForm({ // Reset form\r\n          name: '',\r\n          state_id: '',\r\n          city_id: '',\r\n          mas_cat_id: '',\r\n          mobile: '',\r\n          email: '',\r\n          password: ''\r\n        });\r\n        setCities([]);\r\n      } else {\r\n        toast.error(result.message || 'Failed to add brand');\r\n      }\r\n    } catch (err) {\r\n      toast.error('API error: ' + err.message);\r\n    }\r\n  };\r\n\r\n  // Handlers for updating existing brand\r\n  const handleEditClick = (brand) => {\r\n    setEditingBrandId(brand.id);\r\n    setEditableStatus(brand.status);\r\n    setEditableMode(brand.mode);\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditingBrandId(null);\r\n    setEditableStatus('');\r\n    setEditableMode('');\r\n  };\r\n\r\n  const handleSaveClick = async (brandId) => {\r\n    try {\r\n      const res = await fetch(getApiUrl('update-brand-status-mode.php'), {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          id: brandId,\r\n          status: editableStatus,\r\n          mode: editableMode,\r\n        }),\r\n      });\r\n\r\n      const result = await res.json();\r\n      if (result.success) {\r\n        toast.success('Brand updated successfully');\r\n        fetchBrands(); // Refresh the list to show updated data\r\n        handleCancelEdit(); // Exit edit mode\r\n      } else {\r\n        toast.error(result.message || 'Failed to update brand');\r\n      }\r\n    } catch (err) {\r\n      toast.error('API error: ' + err.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-layout\">\r\n      <Sidebar />\r\n      <div className=\"dashboard-content\">\r\n        <h2 className=\"brand-title\">Registered Brands</h2>\r\n\r\n        <button className=\"add-brand-btn\" onClick={() => setShowModal(true)}>\r\n          <FaPlus /> Add Brand\r\n        </button>\r\n\r\n        {showModal && (\r\n          <div className=\"modal-overlay\">\r\n            <div className=\"modal improved-modal\">\r\n              <h3 className=\"modal-title\">Add New Brand</h3>\r\n\r\n              {[\r\n                { label: 'Brand Name', name: 'name', type: 'text', placeholder: 'Enter brand name' },\r\n                  { label: 'User Name', name: 'user_name', type: 'text', placeholder: 'Enter user name' },\r\n                { label: 'Mobile', name: 'mobile', type: 'text', placeholder: 'Enter mobile number' },\r\n                { label: 'Email', name: 'email', type: 'email', placeholder: 'Enter email address' },\r\n                { label: 'Password', name: 'password', type: 'password', placeholder: 'Enter password' }\r\n              ].map((input) => (\r\n                <div className=\"form-group\" key={input.name}>\r\n                  <label>{input.label}</label>\r\n                  <input\r\n                    type={input.type}\r\n                    name={input.name}\r\n                    value={form[input.name]}\r\n                    onChange={handleFormChange}\r\n                    placeholder={input.placeholder}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n              <div className=\"form-group\">\r\n                <label>State</label>\r\n                <select name=\"state_id\" value={form.state_id} onChange={handleStateChange}>\r\n                  <option value=\"\">-- Select State --</option>\r\n                  {states.map((s) => (\r\n                    <option key={s.id} value={s.id}>{s.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>City</label>\r\n                <select name=\"city_id\" value={form.city_id} onChange={handleFormChange}>\r\n                  <option value=\"\">-- Select City --</option>\r\n                  {cities.map((c) => (\r\n                    <option key={c.id} value={c.id}>{c.name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n                <label>Master Category</label>\r\n                <select name=\"mas_cat_id\" value={form.mas_cat_id} onChange={handleFormChange}>\r\n                  <option value=\"\">-- Select Master Category --</option>\r\n                  {masterCategories.map((cat) => (\r\n                    <option key={cat.mas_cat_id} value={cat.mas_cat_id}>{cat.mas_cat_name}</option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n\r\n              <div className=\"modal-actions\">\r\n                <button className=\"save-btn\" onClick={handleAddBrand}>Save</button>\r\n                <button className=\"cancel-btn\" onClick={() => setShowModal(false)}>Cancel</button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {loading ? (\r\n          <div className=\"status-msg\">Loading...</div>\r\n        ) : error ? (\r\n          <div className=\"status-msg error\">{error}</div>\r\n        ) : brands.length === 0 ? (\r\n          <div className=\"status-msg\">No brands found.</div>\r\n        ) : (\r\n          <div className=\"table-wrapper\">\r\n            <table className=\"brand-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Brand Name</th>\r\n                  <th>Mobile</th>\r\n                  <th>Email</th>\r\n                  <th>Location</th>\r\n                  <th>Sector</th>\r\n                  <th>Status</th>\r\n                  <th>Mode</th>\r\n                  <th>Registered At</th>\r\n                  <th>Actions</th> {/* New column for actions */}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {brands.map((brand) => (\r\n                  <tr key={brand.id}>\r\n                    <td>{brand.name}</td>\r\n                    <td><FaPhone className=\"icon\" /> {brand.mobile}</td>\r\n                    <td><FaEnvelope className=\"icon\" /> {brand.email}</td>\r\n                    <td><FaMapMarkerAlt className=\"icon\" /> {brand.city_name}, {brand.state_name}</td>\r\n                    <td><FaIndustry className=\"icon\" /> {brand.sector_name || 'N/A'}</td>\r\n                    <td>\r\n                      {editingBrandId === brand.id ? (\r\n                        <select\r\n                          value={editableStatus}\r\n                          onChange={(e) => setEditableStatus(e.target.value)}\r\n                          className=\"status-select\"\r\n                        >\r\n                          <option value=\"active\">active</option>\r\n                          <option value=\"not active\">not active</option>\r\n                        </select>\r\n                      ) : (\r\n                        <span className={`status ${brand.status === 'active' ? 'active' : 'not active'}`}>\r\n                          {brand.status}\r\n                        </span>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {editingBrandId === brand.id ? (\r\n                        <select\r\n                          value={editableMode}\r\n                          onChange={(e) => setEditableMode(e.target.value)}\r\n                          className=\"mode-select\"\r\n                        >\r\n                          <option value=\"online\">online</option>\r\n                          <option value=\"offline\">offline</option>\r\n                          <option value=\"hybrid\">hybrid</option>\r\n                        </select>\r\n                      ) : (\r\n                        <>\r\n                          {modeIcons[brand.mode] || '—'} {brand.mode}\r\n                        </>\r\n                      )}\r\n                    </td>\r\n                    <td><FaClock className=\"icon\" /> {brand.register_at}</td>\r\n                    <td>\r\n                      {editingBrandId === brand.id ? (\r\n                        <>\r\n                          <button\r\n                            className=\"action-btn save-btn\"\r\n                            onClick={() => handleSaveClick(brand.id)}\r\n                            title=\"Save Changes\"\r\n                          >\r\n                            <FaSave />\r\n                          </button>\r\n                          <button\r\n                            className=\"action-btn cancel-btn\"\r\n                            onClick={handleCancelEdit}\r\n                            title=\"Cancel Edit\"\r\n                          >\r\n                            <FaTimes />\r\n                          </button>\r\n                        </>\r\n                      ) : (\r\n                        <button\r\n                          className=\"action-btn edit-btn\"\r\n                          onClick={() => handleEditClick(brand)}\r\n                          title=\"Edit Brand\"\r\n                        >\r\n                          <FaEdit />\r\n                        </button>\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["modeIcons","online","_jsx","MdComputer","className","offline","MdLocationCity","hybrid","MdWifi","BrandList","brands","setBrands","useState","loading","setLoading","error","setError","showModal","setShowModal","form","setForm","name","state_id","city_id","mas_cat_id","mobile","email","password","editingBrandId","setEditingBrandId","editableStatus","setEditableStatus","editableMode","setEditableMode","states","setStates","cities","setCities","masterCategories","setMasterCategories","useEffect","fetchBrands","fetchStates","fetchMasterCategories","async","res","fetch","getApiUrl","result","json","success","data","message","e","Array","isArray","console","filtered","filter","cat","is_deleted","handleFormChange","_objectSpread","target","value","handleCancelEdit","_jsxs","children","Sidebar","onClick","FaPlus","label","type","placeholder","map","input","onChange","concat","stateId","fetchCities","s","id","c","mas_cat_name","method","headers","body","JSON","stringify","user_name","toast","err","length","brand","FaPhone","FaEnvelope","FaMapMarkerAlt","city_name","state_name","FaIndustry","sector_name","status","_Fragment","mode","FaClock","register_at","brandId","handleSaveClick","title","FaSave","FaTimes","handleEditClick","FaEdit","sectionCollapsed","setSectionCollapsed","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","FaBars","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaCity","FaUsers","handleLogout","removeItem","info","FaThLarge"],"sourceRoot":""}