{"version":3,"file":"static/js/5495.04e49670.chunk.js","mappings":"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","sources":["admin/InvestorModal.jsx","admin/InvestorPage.jsx","admin/Sidebar.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Select from 'react-select';\r\nimport {\r\n  FaUser, FaPhone, FaEnvelope, FaMapMarkerAlt,\r\n  FaCity, FaInfoCircle, FaTimes, FaLock\r\n} from 'react-icons/fa';\r\nimport { toast } from 'react-toastify';\r\nimport './InvestorModal.css';\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nconst statusOptions = [\r\n  { value: 'active', label: 'Active' },\r\n  { value: 'not active', label: 'Not Active' },\r\n];\r\n\r\nconst findOption = (options, value) => options.find(opt => opt.value === value);\r\n\r\nconst validateForm = (form, selectedState, selectedCity, selectedStatus, isEditing) => {\r\n  if (!form.name.trim()) return toast.error(\"Name is required.\") && false;\r\n  if (!form.user_name.trim()) return toast.error(\"User Name is required.\") && false; // Added validation for user_name\r\n  if (!/^\\d{10}$/.test(form.number)) return toast.error(\"A valid 10-digit mobile number is required.\") && false;\r\n  if (!/\\S+@\\S+\\.\\S+/.test(form.email)) return toast.error(\"A valid email address is required.\") && false;\r\n  if (!isEditing && (!form.password || form.password.length < 8))\r\n    return toast.error(\"Password must be at least 8 characters.\") && false;\r\n  if (!selectedState) return toast.error(\"Please select a state.\") && false;\r\n  if (!selectedCity) return toast.error(\"Please select a city.\") && false;\r\n  if (!selectedStatus) return toast.error(\"Please select a status.\") && false;\r\n  return true;\r\n};\r\n\r\nexport default function InvestorModal({ show, onClose, onFormSubmissionSuccess, editingInvestor }) {\r\n  const [states, setStates] = useState([]);\r\n  const [cities, setCities] = useState([]);\r\n\r\n  const [form, setForm] = useState({ name: '', number: '', email: '', password: '', user_name: '' });\r\n  const [selectedState, setSelectedState] = useState(null);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [selectedStatus, setSelectedStatus] = useState(null);\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n\r\n  const isEditing = !!editingInvestor;\r\n\r\n  // Load States once on mount\r\n  useEffect(() => {\r\n    if (!show) return;\r\n    fetch(getApiUrl('get-indian-states.php'))\r\n      .then(res => res.json())\r\n      .then(data => setStates(data.map(s => ({ value: s.id, label: s.name }))))\r\n      .catch(() => toast.error(\"Failed to load states.\"));\r\n  }, [show]);\r\n\r\n  // Load Cities when state is selected\r\n  useEffect(() => {\r\n    if (!selectedState) {\r\n      setCities([]);\r\n      setSelectedCity(null);\r\n      return;\r\n    }\r\n\r\n    fetch(`${getApiUrl('get-cities.php')}?state_id=${selectedState.value}`)\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        const formatted = data.map(city => ({ value: city.id, label: city.name }));\r\n        setCities(formatted);\r\n        // Restore city on edit\r\n        if (editingInvestor?.city_id) {\r\n          const found = findOption(formatted, editingInvestor.city_id);\r\n          if (found) setSelectedCity(found);\r\n        }\r\n      })\r\n      .catch(() => toast.error(\"Failed to load cities.\"));\r\n  }, [selectedState, editingInvestor]);\r\n\r\n  // Populate form on edit\r\n  useEffect(() => {\r\n    if (!show) return;\r\n\r\n    if (editingInvestor) {\r\n      setForm({\r\n        name: editingInvestor.name || '',\r\n        number: editingInvestor.mobile || '',\r\n        email: editingInvestor.email || '',\r\n        password: '', // Keep password blank on edit\r\n        user_name: editingInvestor.user_name || ''\r\n      });\r\n      setSelectedState(findOption(states, editingInvestor.state_id));\r\n      setSelectedStatus(findOption(statusOptions, editingInvestor.status));\r\n    } else {\r\n      setForm({ name: '', number: '', email: '', password: '', user_name: '' });\r\n      setSelectedState(null);\r\n      setSelectedCity(null);\r\n      setSelectedStatus(null);\r\n    }\r\n  }, [editingInvestor, states, show]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (isSubmitting) return;\r\n\r\n    const isValid = validateForm(form, selectedState, selectedCity, selectedStatus, isEditing);\r\n    if (!isValid) return;\r\n\r\n    setIsSubmitting(true);\r\n\r\n    const payload = {\r\n      name: form.name,\r\n      mobile: form.number,\r\n      email: form.email,\r\n      state_id: selectedState.value,\r\n      city_id: selectedCity.value,\r\n      status: selectedStatus.value,\r\n      user_name: form.user_name,\r\n    };\r\n    if (!isEditing) {\r\n      payload.password = form.password;\r\n    } else {\r\n      payload.id = editingInvestor.id;\r\n    }\r\n\r\n    const endpoint = isEditing\r\n      ? getApiUrl('update-offline-investor.php')\r\n      : getApiUrl('add-offline-investor.php');\r\n    console.log(\"Submitting to:\", endpoint, \"with payload:\", JSON.stringify(payload));\r\n    try {\r\n      const res = await fetch(endpoint, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(payload)\r\n      });\r\n      const data = await res.json();\r\n\r\n      if (data.success) {\r\n        toast.success(data.message);\r\n        onFormSubmissionSuccess();\r\n        onClose();\r\n      } else {\r\n        toast.error(data.message || \"Something went wrong.\");\r\n      }\r\n    } catch (error) {\r\n      toast.error(\"🚫 Server error. Please try again.\");\r\n      console.error(error);\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n\r\n  if (!show) return null;\r\n\r\n  const modalTitle = isEditing ? 'Update Investor' : 'Add New Investor';\r\n  const buttonText = isEditing ? 'Update Investor' : 'Add Investor';\r\n\r\n  return (\r\n    <div className=\"modal-overlay\" onClick={onClose}>\r\n      <div className=\"modal-content\" onClick={e => e.stopPropagation()}>\r\n        <div className=\"modal-header\">\r\n          <h2>{modalTitle}</h2>\r\n          <button className=\"modal-close-btn\" onClick={onClose}><FaTimes /></button>\r\n        </div>\r\n        <form onSubmit={handleSubmit}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <FaUser className=\"form-icon\" />\r\n              <input type=\"text\" placeholder=\"Name\" value={form.name}\r\n                onChange={(e) => setForm({ ...form, name: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <FaEnvelope className=\"form-icon\" />\r\n              <input type=\"email\" placeholder=\"Email\" value={form.email}\r\n                onChange={(e) => setForm({ ...form, email: e.target.value })} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group\">\r\n              <FaPhone className=\"form-icon\" />\r\n              <input type=\"tel\" placeholder=\"Mobile Number\" value={form.number}\r\n                onChange={(e) => setForm({ ...form, number: e.target.value })} />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <FaLock className=\"form-icon\" />\r\n              <input type=\"password\" placeholder=\"Password\" value={form.password}\r\n                onChange={(e) => setForm({ ...form, password: e.target.value })}\r\n                disabled={isEditing} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group select-group\">\r\n              <FaMapMarkerAlt className=\"form-icon\" />\r\n              <Select\r\n                options={states}\r\n                value={selectedState}\r\n                onChange={setSelectedState}\r\n                placeholder=\"Select State\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group select-group\">\r\n              <FaCity className=\"form-icon\" />\r\n              <Select\r\n                options={cities}\r\n                value={selectedCity}\r\n                onChange={setSelectedCity}\r\n                placeholder=\"Select City\"\r\n                isDisabled={!selectedState}\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group select-group\">\r\n              <FaInfoCircle className=\"form-icon\" />\r\n              <Select\r\n                options={statusOptions}\r\n                value={selectedStatus}\r\n                onChange={setSelectedStatus}\r\n                placeholder=\"Select Status\"\r\n              />\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <FaUser className=\"form-icon\" />\r\n              <input type=\"text\" placeholder=\"User Name\" value={form.user_name}\r\n                onChange={(e) => setForm({ ...form, user_name: e.target.value })} />\r\n            </div>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"submit-btn\" disabled={isSubmitting}>\r\n            {isSubmitting ? 'Processing...' : buttonText}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport { FaPlusCircle } from 'react-icons/fa';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nimport InvestorModal from './InvestorModal'; // Use the renamed modal component\r\nimport './InvestorPage.css';\r\nimport './DashboardLayout.css';\r\nimport Sidebar from './Sidebar';\r\n\r\n// Import the API helper function\r\nimport { getApiUrl } from '../utils/api';\r\n\r\nexport default function InvestorTable() {\r\n  const [investors, setInvestors] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showInvestorModal, setShowInvestorModal] = useState(false); // Modal visibility state\r\n  const [editingInvestor, setEditingInvestor] = useState(null); // State to store the investor being edited\r\n\r\n  // Memoized function to fetch investor data\r\n  const fetchInvestors = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch(getApiUrl('get-offline-investors.php'));\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        setInvestors(result.data);\r\n        setError(null);\r\n      } else {\r\n        toast.error(result.message || \"Failed to fetch investors.\");\r\n        setError(result.message);\r\n      }\r\n    } catch (e) {\r\n      toast.error(\"🚫 Network error. Please check your server connection.\");\r\n      setError(e.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchInvestors();\r\n  }, [fetchInvestors]);\r\n\r\n  // Handler for opening the modal to add a new investor\r\n  const handleAddInvestorClick = () => {\r\n    setEditingInvestor(null); // Clear any existing editing state\r\n    setShowInvestorModal(true);\r\n  };\r\n\r\n  // Handler for opening the modal to edit an existing investor\r\n  const handleEditInvestorClick = (investor) => {\r\n    setEditingInvestor(investor);\r\n    setShowInvestorModal(true);\r\n  };\r\n\r\n  // Handler to close the modal and reset editing state\r\n  const handleCloseModal = () => {\r\n    setShowInvestorModal(false);\r\n    setEditingInvestor(null); // Clear the editing state\r\n  };\r\n  \r\n  // This function is passed to the modal and is called upon successful form submission\r\n  const handleFormSubmissionSuccess = () => {\r\n    fetchInvestors(); // Refresh the table data\r\n    handleCloseModal(); // Close the modal\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <Sidebar />\r\n        <div className=\"main-content\">\r\n          <div className=\"investor-table-container\">\r\n            <h2 className=\"table-title\">Offline Investors</h2>\r\n            <div className=\"loading\">Loading investors...</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"dashboard-container\">\r\n        <Sidebar />\r\n        <div className=\"main-content\">\r\n          <div className=\"investor-table-container\">\r\n            <h2 className=\"table-title\">Offline Investors</h2>\r\n            <div className=\"error\">Error: {error}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <Sidebar />\r\n      <div className=\"main-content\">\r\n        <ToastContainer position=\"top-right\" autoClose={3000} />\r\n        <div className=\"investor-table-container\">\r\n          <div className=\"table-header\">\r\n            <h2 className=\"table-title\">Offline Investors</h2>\r\n            <button className=\"add-investor-btn\" onClick={handleAddInvestorClick}>\r\n              <FaPlusCircle className=\"btn-icon\" />\r\n              Add Investor\r\n            </button>\r\n          </div>\r\n          {investors.length === 0 ? (\r\n            <div className=\"no-data\">No investors found.</div>\r\n          ) : (\r\n            <div className=\"table-wrapper\">\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th>Mobile</th>\r\n                    <th>Email</th>\r\n                    <th>Status</th>\r\n                    <th>Mode</th>\r\n                   \r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {investors.map((investor) => (\r\n                    <tr key={investor.id}>\r\n                      <td data-label=\"Name\">{investor.name}</td>\r\n                      <td data-label=\"Mobile\">{investor.mobile}</td>\r\n                      <td data-label=\"Email\">{investor.email}</td>\r\n                      <td data-label=\"Status\" className={investor.status === 'active' ? 'status-active' : 'status-not-active'}>\r\n                        {investor.status}\r\n                      </td>\r\n                        <td data-label=\"Mode\">{investor.mode}</td>\r\n                      <td data-label=\"Actions\">\r\n                        <button \r\n                          className=\"action-btn edit-btn\"\r\n                          onClick={() => handleEditInvestorClick(investor)}\r\n                        >\r\n                          Edit\r\n                        </button>\r\n                        <button className=\"action-btn delete-btn\">Delete</button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </div>\r\n        <InvestorModal \r\n          show={showInvestorModal} \r\n          onClose={handleCloseModal} \r\n          onFormSubmissionSuccess={handleFormSubmissionSuccess}\r\n          editingInvestor={editingInvestor}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom'; // Import Link and useNavigate\r\nimport { toast } from 'react-toastify'; // Import toast for logout message\r\nimport './sidebar.css'; // Ensure this path is correct\r\nimport {\r\n  FaChevronDown, FaChevronRight, FaBuilding, FaUserTie,\r\n  FaBullhorn, FaCity, FaUsers, FaUserCircle, FaThLarge, FaBars, FaTimes\r\n} from 'react-icons/fa';\r\n\r\nconst Sidebar = () => {\r\n  // State to manage the collapse/expand status of each menu section\r\n  const [sectionCollapsed, setSectionCollapsed] = useState({\r\n    master: false, // Set initial state to open for better visibility\r\n    franchising: false, \r\n    marketing: false,\r\n    leasing: false,\r\n    admin: false,\r\n  });\r\n\r\n  // State to manage the overall collapse/expand status of the sidebar itself\r\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\r\n\r\n  // States to hold admin user's name and email from localStorage\r\n  const [adminName, setAdminName] = useState('Guest');\r\n  const [adminEmail, setAdminEmail] = useState('');\r\n\r\n  // Hook from react-router-dom for programmatic navigation\r\n  const navigate = useNavigate();\r\n\r\n  // Effect to read admin information from localStorage when the component mounts\r\n  useEffect(() => {\r\n    const storedAdminName = localStorage.getItem('adminName');\r\n    const storedAdminEmail = localStorage.getItem('adminEmail');\r\n    if (storedAdminName) {\r\n      setAdminName(storedAdminName);\r\n    }\r\n    if (storedAdminEmail) {\r\n      setAdminEmail(storedAdminEmail);\r\n    }\r\n  }, []); // Empty dependency array ensures this runs only once on mount\r\n\r\n  // Toggles the collapse/expand state of a specific menu section\r\n  const toggleSection = (section) => {\r\n    setSectionCollapsed((prev) => ({\r\n      ...prev,\r\n      [section]: !prev[section]\r\n    }));\r\n  };\r\n\r\n  // Handles the logout action\r\n  const handleLogout = () => {\r\n    // ✅ This is where localStorage items are removed\r\n    localStorage.removeItem('adminId');\r\n    localStorage.removeItem('adminName');\r\n    localStorage.removeItem('adminEmail');\r\n    \r\n    toast.info('You have been logged out.'); // Show a logout message\r\n    navigate('/admin/login'); // Redirect to the login page\r\n  };\r\n\r\n  return (\r\n    <aside className={`snbs-sidebar ${sidebarCollapsed ? 'collapsed' : ''}`}>\r\n      <div className=\"snbs-sidebar-header\">\r\n        <div className=\"snbs-logo\">\r\n          {!sidebarCollapsed && (\r\n            <>\r\n              <h2>FRANMAX INDIA</h2>\r\n              {/* Display admin's name and email */}\r\n              <p className=\"snbs-role\">Welcome, {adminName}</p>\r\n              {adminEmail && <p className=\"snbs-email\">{adminEmail}</p>}\r\n            </>\r\n          )}\r\n        </div>\r\n        {/* Button to toggle sidebar collapse/expand */}\r\n        <button\r\n          className=\"snbs-toggle-btn\"\r\n          onClick={() => setSidebarCollapsed(!sidebarCollapsed)}\r\n        >\r\n          {sidebarCollapsed ? <FaBars /> : <FaTimes />}\r\n        </button>\r\n      </div>\r\n\r\n      <nav className=\"snbs-menu\">\r\n        {/* Master Section */}\r\n        \r\n        {/* Franchising Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('franchising')}>\r\n            <span>FRANCHISING</span>\r\n            {sectionCollapsed.franchising ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.franchising && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/admin/brand-list\" className=\"snbs-link\"><FaBuilding /> Brand</Link>\r\n              <Link to=\"/admin/investors\" className=\"snbs-link\"><FaUserTie /> Investor</Link>\r\n              <Link to=\"/admin/leads\" className=\"snbs-link\"><FaUserTie />Generic Inquiries</Link>\r\n              <Link to=\"/admin/brand-inquiries\" className=\"snbs-link\"><FaUserTie />Brand Specific Inquiries</Link>\r\n              <Link to=\"/admin/partner-inquiries\" className=\"snbs-link\"><FaUserTie />Partner Inquiries</Link>\r\n               <Link to=\"/admin/newsletter\" className=\"snbs-link\"><FaUserTie />Newsletter</Link>\r\n                <Link to=\"/admin/faq\" className=\"snbs-link\"><FaUserTie />FAQ</Link>\r\n                <Link to=\"/admin/event\"  className=\"snbs-link\"><FaUserTie />Event</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n        \r\n        {/* Marketing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('marketing')}>\r\n            <span>MARKETING</span>\r\n            {sectionCollapsed.marketing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.marketing && !sidebarCollapsed && (\r\n            <Link to=\"/admin/marketing-inquiries\" className=\"snbs-link\"><FaBullhorn /> Marketing</Link>\r\n          )}\r\n        </div>\r\n\r\n        {/* Leasing Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('leasing')}>\r\n            <span>LEASING</span>\r\n            {sectionCollapsed.leasing ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.leasing && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Buy Lease Property inquiries</Link>\r\n              <Link to=\"/admin/lease-properties\" className=\"snbs-link\"><FaCity /> Lease Property inquiries</Link>\r\n              \r\n              <Link to=\"#\" className=\"snbs-link\"><FaCity /> Sell Property</Link>\r\n              <Link to=\"/admin/buy-business-inquiries\" className=\"snbs-link\"><FaCity />Buy Business Inquiry</Link>\r\n              <Link to=\"/admin/sell-business-inquiries\" className=\"snbs-link\"><FaCity /> Sell Business</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n\r\n        {/* Admin Section */}\r\n        <div className=\"snbs-section\">\r\n          <div className=\"snbs-section-header\" onClick={() => toggleSection('admin')}>\r\n            <span>ADMIN</span>\r\n            {sectionCollapsed.admin ? <FaChevronDown /> : <FaChevronRight />}\r\n          </div>\r\n          {sectionCollapsed.admin && !sidebarCollapsed && (\r\n            <>\r\n              <Link to=\"/user-list\" className=\"snbs-link\"><FaUsers /> Users</Link>\r\n          \r\n              {/* Logout link calls the handleLogout function */}\r\n              <Link to=\"#\" onClick={handleLogout} className=\"snbs-link\"><FaThLarge /> Logout</Link>\r\n            </>\r\n          )}\r\n        </div>\r\n      </nav>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"names":["statusOptions","value","label","findOption","options","find","opt","validateForm","form","selectedState","selectedCity","selectedStatus","isEditing","name","trim","user_name","test","number","email","password","length","toast","error","InvestorModal","_ref","show","onClose","onFormSubmissionSuccess","editingInvestor","states","setStates","useState","cities","setCities","setForm","setSelectedState","setSelectedCity","setSelectedStatus","isSubmitting","setIsSubmitting","useEffect","fetch","getApiUrl","then","res","json","data","map","s","id","catch","concat","formatted","city","city_id","found","mobile","state_id","status","modalTitle","buttonText","_jsx","className","onClick","children","_jsxs","e","stopPropagation","FaTimes","onSubmit","async","preventDefault","payload","endpoint","console","log","JSON","stringify","method","headers","body","success","message","FaUser","type","placeholder","onChange","_objectSpread","target","FaEnvelope","FaPhone","FaLock","disabled","FaMapMarkerAlt","Select","FaCity","isDisabled","FaInfoCircle","InvestorTable","investors","setInvestors","loading","setLoading","setError","showInvestorModal","setShowInvestorModal","setEditingInvestor","fetchInvestors","useCallback","response","ok","Error","result","handleCloseModal","Sidebar","ToastContainer","position","autoClose","handleAddInvestorClick","FaPlusCircle","investor","mode","handleEditInvestorClick","handleFormSubmissionSuccess","sectionCollapsed","setSectionCollapsed","master","franchising","marketing","leasing","admin","sidebarCollapsed","setSidebarCollapsed","adminName","setAdminName","adminEmail","setAdminEmail","navigate","useNavigate","storedAdminName","localStorage","getItem","storedAdminEmail","toggleSection","section","prev","_Fragment","FaBars","FaChevronDown","FaChevronRight","Link","to","FaBuilding","FaUserTie","FaBullhorn","FaUsers","handleLogout","removeItem","info","FaThLarge"],"sourceRoot":""}